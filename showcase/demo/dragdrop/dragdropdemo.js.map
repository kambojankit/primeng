{"version":3,"file":"dragdropdemo.js","sourceRoot":"","sources":["dragdropdemo.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAwC;AAExC,oDAAiD;AAYjD,IAAa,YAAY;IAQrB,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,+BAAQ,GAAR;QAAA,iBAGC;QAFG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAC3E,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK,EAAC,GAAQ;QACpB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IAC1B,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAK;QACN,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,8BAAO,GAAP,UAAQ,KAAK;QACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,gCAAS,GAAT,UAAU,GAAQ;QACd,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QACf,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChD,EAAE,CAAA,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvC,KAAK,GAAG,CAAC,CAAC;gBACV,KAAK,CAAC;YACV,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEL,mBAAC;AAAD,CAAC,AA1CD,IA0CC;AA1CY,YAAY;IAVxB,gBAAS,CAAC;QACP,WAAW,EAAE,0CAA0C;QACvD,MAAM,EAAE,CAAC,2IAMR,CAAC;KACL,CAAC;qCASkC,uBAAU;GARjC,YAAY,CA0CxB;AA1CY,oCAAY","sourcesContent":["import {Component} from '@angular/core';\nimport {Car} from '../domain/car';\nimport {CarService} from '../service/carservice';\n\n@Component({\n    templateUrl: 'showcase/demo/dragdrop/dragdropdemo.html',\n    styles: [`\n        .ui-grid li {\n            list-style-type: none;\n            padding: 10px;\n            margin-bottom: 5px;\n        }\n    `]\n})\nexport class DragDropDemo {\n    \n    availableCars: Car[];\n    \n    selectedCars: Car[];\n    \n    draggedCar: Car;\n    \n    constructor(private carService: CarService) { }\n    \n    ngOnInit() {\n        this.selectedCars = [];\n        this.carService.getCarsSmall().then(cars => this.availableCars = cars);\n    }\n    \n    dragStart(event,car: Car) {\n        this.draggedCar = car;\n    }\n    \n    drop(event) {\n        if(this.draggedCar) {\n            this.selectedCars.push(this.draggedCar);\n            this.availableCars.splice(this.findIndex(this.draggedCar), 1);\n            this.draggedCar = null;\n        }\n    }\n    \n    dragEnd(event) {\n        this.draggedCar = null;\n    }\n    \n    findIndex(car: Car) {\n        let index = -1;\n        for(let i = 0; i < this.availableCars.length; i++) {\n            if(car.vin === this.availableCars[i].vin) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n\n}"]}