{"version":3,"file":"nodeservice.js","sourceRoot":"","sources":["nodeservice.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyC;AACzC,sCAA6C;AAI7C,IAAa,WAAW;IAEpB,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAElC,8BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAoC,CAAC;aAC7C,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAa,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAA5B,CAA4B,CAAC;aACzC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,kCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC;aAClD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAa,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAA5B,CAA4B,CAAC;aACzC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,mCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC;aAClD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAa,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAA5B,CAA4B,CAAC;aACzC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,uCAAiB,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8CAA8C,CAAC;aACvD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAa,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAA5B,CAA4B,CAAC;aACzC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IACL,kBAAC;AAAD,CAAC,AA/BD,IA+BC;AA/BY,WAAW;IADvB,iBAAU,EAAE;qCAGiB,WAAI;GAFrB,WAAW,CA+BvB;AA/BY,kCAAW","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport {TreeNode} from '../../../components/common/api';\n\n@Injectable()\nexport class NodeService {\n    \n    constructor(private http: Http) {}\n\n    getFiles() {\n        return this.http.get('showcase/resources/data/files.json')\n                    .toPromise()\n                    .then(res => <TreeNode[]> res.json().data)\n                    .then(data => { return data; });\n    }\n    \n    getLazyFiles() {\n        return this.http.get('showcase/resources/data/files-lazy.json')\n                    .toPromise()\n                    .then(res => <TreeNode[]> res.json().data)\n                    .then(data => { return data; });\n    }\n    \n    getFilesystem() {\n        return this.http.get('showcase/resources/data/filesystem.json')\n                    .toPromise()\n                    .then(res => <TreeNode[]> res.json().data)\n                    .then(data => { return data; });\n    }\n    \n    getLazyFilesystem() {\n        return this.http.get('showcase/resources/data/filesystem-lazy.json')\n                    .toPromise()\n                    .then(res => <TreeNode[]> res.json().data)\n                    .then(data => { return data; });\n    }\n}"]}